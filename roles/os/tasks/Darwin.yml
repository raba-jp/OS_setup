---
- name: Include variables
  include_vars:
    dir: "vars/{{ ansible_os_family }}"
    extensions: ['yml']

- name: Update homebrew
  homebrew:
    update_homebrew: yes

- name: Add homebrew taps
  homebrew_tap:
    tap: "{{ item }}"
    state: present
  with_items: "{{ default_homebrew_taps + homebrew_taps }}"

- name: Install homebrew packages
  homebrew:
    name: "{{ item.name | default(item)  }}"
    state: "{{ item.state | default('latest') }}"
    install_options: "{{ item.install_options | default('') }}"
  with_items: "{{ default_homebrew_packages + homebrew_packages }}"

- name: Install homebrew cask packages
  homebrew_cask:
    name: "{{ item }}"
    state: present
  with_items: "{{ default_homebrew_cask_packages + homebrew_cask_packages }}"

- name: Get AppStore account status
  shell: mas account
  register: app_store_account_status
  failed_when: app_store_account_status.rc > 1
  changed_when: False

- name: Sign in to AppStore when id and password are provided.
  shell: 'mas signin "{{ app_store_id }}" "{{ app_store_password }}"'
  register: app_store_signin_status
  when:
    - app_store_account_status.rc == 1
    - app_store_id != ''
    - app_store_password != ''

- name: List installed MAS apps.
  command: mas list
  register: app_store_list
  check_mode: no
  changed_when: false

- name: Ensure configured AppStore apps are installed.
  command: mas install "{{ item }}"
  with_items: "{{ app_store_applications }}"
  when: "'{{ item }}' not in app_store_list.stdout"

- name: Upgrade all apps (if configured).
  command: mas upgrade
  when: app_store_upgrade

- name: Setup OS X defaults
  osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: present
  notify: "{{ item.notify | default(omit) }}"
  with_items: "{{ mac_os_defaults }}"

- name: Check if iterm2 config is differ
  shell: |
    diff <(plutil -convert binary1 -o - ./com.googlecode.iterm2.plist | md5 -q) <(md5 -q ~/Library/Preferences/com.googlecode.iterm2.plist)
  args:
    chdir: roles/mac/files/Library/Preferences
    executable: /bin/bash
  register: diff_result
  check_mode: no
  failed_when: false
  changed_when: diff_result.rc != 0
  notify:
    - Restore iterm2 configuration

- name: Change login shell to fish
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/local/bin/fish
    state: present
